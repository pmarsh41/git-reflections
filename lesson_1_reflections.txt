How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I liked seeing the changes in the code isolated. It made it much easier to see the  changes.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    There’s no way to remember all of the changes that happen within a file and on a project.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Building a project isn’t like a report or a spreadsheet. Commits are big actions that impact a project and others on your team. It doesn’t make sense for that kind of decision to be automated.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Projects are big and the code you are working on can effect multiple aspects of your project. It can be a huge help to have some comprehensive saving when its clear where the saves are happening.

How can you use the commands git log and git diff to view the history of files?

   Git diff is helpful to see what changed between two files.

How might using version control make you more confident to make changes that
could break something?

    It’s important to know when and where changes occurred. You can always role back to where you need to go back to.

Now that you have your workspace set up, what do you want to try using Git for?

   I want to make sure that its always easy to set a project up and get a repo started.
